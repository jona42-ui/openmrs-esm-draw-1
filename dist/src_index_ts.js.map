{"version":3,"file":"src_index_ts.js","mappings":";;;;;;;;;;;;;AAAO,IAAMA,eAAe,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;ACAgD;AAChC;AAE/C,IAAMG,aAAa;AAEnB,IAAMC,UAAU;IACdC,aAAa;IACbF,YAAY;AACd;AAEO,IAAMG,oBAAoBC,iDAI/B,CACA;AAEK,IAAME,WAAWP,yEAAiBA,CACvC;WAAM,kdAA+B;GACrCE,SACA;AAEK,SAASM;IACdT,0EAAkBA,CAACE,YAAYH,wDAAYA;AAC7C;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA","sources":["webpack://@openmrs/esm-draw-app/./src/config-schema.ts","webpack://@openmrs/esm-draw-app/./src/index.ts","webpack://@openmrs/esm-draw-app/./translations/ lazy nonrecursive .json$"],"sourcesContent":["export const configSchema = {};\n","import { defineConfigSchema, getAsyncLifecycle } from \"@openmrs/esm-framework\";\nimport { configSchema } from \"./config-schema\";\n\nconst moduleName = \"@openmrs/esm-draw-app\";\n\nconst options = {\n  featureName: \"draw\",\n  moduleName: \"@openmrs/esm-draw-app\",\n};\n\nexport const importTranslation = require.context(\n  \"../translations\",\n  false,\n  /.json$/,\n  \"lazy\"\n);\n\nexport const drawPage = getAsyncLifecycle(\n  () => import(\"./draw-page.component\"),\n  options\n);\n\nexport function startupApp() {\n  defineConfigSchema(moduleName, configSchema);\n}\n","var map = {\n\t\"./en.json\": [\n\t\t\"./translations/en.json\",\n\t\t\"translations_en_json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./translations lazy .json$\";\nmodule.exports = webpackAsyncContext;"],"names":["configSchema","defineConfigSchema","getAsyncLifecycle","moduleName","options","featureName","importTranslation","require","context","drawPage","startupApp"],"sourceRoot":""}