{"version":3,"file":"openmrs-esm-globals.js","mappings":"iFACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,yXCD9D,IAAMC,EAA+B,+BAE9B,SAASC,EAA4BC,GAC1CC,OAAOC,cACL,IAAIC,YAAYL,EAA8B,CAAEM,OAAQ,CAAEJ,OAAAA,KAE9D,CAGO,SAASK,EACdC,GAEA,IAAMC,EAAU,SAACC,G,OAAoBF,EAAGE,EAAGJ,O,EAE3C,OADAH,OAAOQ,iBAAiBX,EAA8BS,GAC/C,W,OACLN,OAAOS,oBAAoBZ,EAA8BS,E,CAC7D,CAGO,SAASI,EACdL,GAGA,OADAA,EAAG,CAAEN,OAAQY,UAAUC,SAChBR,EAA6BC,EACtC,CAIA,IAAMQ,EACJ,uCAEK,SAASC,I,IACdC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAwC,CAAC,EAEzCf,OAAOC,cACL,IAAIC,YAAYW,EAAqC,CAAEV,OAAQY,IAEnE,CAGO,SAASC,EACdX,GAEA,IAAMC,EAAU,SAACC,G,OAAoBF,EAAGE,EAAGJ,O,EAE3C,OADAH,OAAOQ,iBAAiBK,EAAqCP,GACtD,W,OACLN,OAAOS,oBAAoBI,EAAqCP,E,CACpE,CA8CA,IAAMW,EAAwB,6BACxBC,EAAkC,wCAClCC,EAAiB,sBAEhB,SAASC,EAA0BL,GACxCf,OAAOC,cACL,IAAIC,YAAYe,EAAuB,CAAEd,OAAQY,IAErD,CAEO,SAASM,EACdN,GAEAf,OAAOC,cACL,IAAIC,YAAYgB,EAAiC,CAAEf,OAAQY,IAE/D,CAGO,SAASO,EACdjB,GAEA,IAAMC,EAAU,SAACC,G,OAAoBF,EAAGE,EAAGJ,O,EAE3C,OADAH,OAAOQ,iBAAiBS,EAAuBX,GACxC,W,OAAMN,OAAOS,oBAAoBQ,EAAuBX,E,CACjE,CAGO,SAASiB,EACdlB,GAEA,IAAMC,EAAU,SAACC,G,OAAoBF,EAAGE,EAAGJ,O,EAE3C,OADAH,OAAOQ,iBAAiBU,EAAiCZ,GAClD,W,OACLN,OAAOS,oBAAoBS,EAAiCZ,E,CAChE,CAGO,SAASkB,EAAoBnB,GAClC,IAAMC,EAAU,SAACC,G,OAAoBF,EAAGE,EAAGJ,O,EAE3C,OADAH,OAAOQ,iBAAiBW,EAAgBb,GACjC,W,OAAMN,OAAOS,oBAAoBU,EAAgBb,E,CAC1D,C","sources":["webpack://@openmrs/esm-globals/webpack/bootstrap","webpack://@openmrs/esm-globals/webpack/runtime/define property getters","webpack://@openmrs/esm-globals/webpack/runtime/hasOwnProperty shorthand","webpack://@openmrs/esm-globals/webpack/runtime/make namespace object","webpack://@openmrs/esm-globals/./src/events.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface ConnectivityChangedEvent {\n  online: boolean;\n}\n\nconst connectivityChangedEventName = \"openmrs:connectivity-changed\";\n\nexport function dispatchConnectivityChanged(online: boolean) {\n  window.dispatchEvent(\n    new CustomEvent(connectivityChangedEventName, { detail: { online } })\n  );\n}\n\n/** @category Offline */\nexport function subscribeConnectivityChanged(\n  cb: (ev: ConnectivityChangedEvent) => void\n) {\n  const handler = (ev: CustomEvent) => cb(ev.detail);\n  window.addEventListener(connectivityChangedEventName, handler);\n  return () =>\n    window.removeEventListener(connectivityChangedEventName, handler);\n}\n\n/** @category Offline */\nexport function subscribeConnectivity(\n  cb: (ev: ConnectivityChangedEvent) => void\n) {\n  cb({ online: navigator.onLine });\n  return subscribeConnectivityChanged(cb);\n}\n\nexport interface PrecacheStaticDependenciesEvent {}\n\nconst precacheStaticDependenciesEventName =\n  \"openmrs:precache-static-dependencies\";\n\nexport function dispatchPrecacheStaticDependencies(\n  data: PrecacheStaticDependenciesEvent = {}\n) {\n  window.dispatchEvent(\n    new CustomEvent(precacheStaticDependenciesEventName, { detail: data })\n  );\n}\n\n/** @category Offline */\nexport function subscribePrecacheStaticDependencies(\n  cb: (data: PrecacheStaticDependenciesEvent) => void\n) {\n  const handler = (ev: CustomEvent) => cb(ev.detail);\n  window.addEventListener(precacheStaticDependenciesEventName, handler);\n  return () =>\n    window.removeEventListener(precacheStaticDependenciesEventName, handler);\n}\n\n/** @category UI */\nexport interface ShowNotificationEvent {\n  description: any;\n  kind?:\n    | \"error\"\n    | \"info\"\n    | \"info-square\"\n    | \"success\"\n    | \"warning\"\n    | \"warning-alt\";\n  title?: string;\n  action?: any;\n  millis?: number;\n}\n\nexport interface ShowActionableNotificationEvent {\n  subtitle: any;\n  kind?:\n    | \"error\"\n    | \"info\"\n    | \"info-square\"\n    | \"success\"\n    | \"warning\"\n    | \"warning-alt\";\n  title?: string;\n  actionButtonLabel: string | any;\n  onActionButtonClick: () => void;\n  progressActionLabel?: string;\n}\n\n/** @category UI */\nexport interface ShowToastEvent {\n  description: any;\n  kind?:\n    | \"error\"\n    | \"info\"\n    | \"info-square\"\n    | \"success\"\n    | \"warning\"\n    | \"warning-alt\";\n  title?: string;\n  millis?: number;\n}\n\nconst notificationShownName = \"openmrs:notification-shown\";\nconst actionableNotificationShownName = \"openmrs:actionable-notification-shown\";\nconst toastShownName = \"openmrs:toast-shown\";\n\nexport function dispatchNotificationShown(data: ShowNotificationEvent) {\n  window.dispatchEvent(\n    new CustomEvent(notificationShownName, { detail: data })\n  );\n}\n\nexport function dispatchActionableNotificationShown(\n  data: ShowActionableNotificationEvent\n) {\n  window.dispatchEvent(\n    new CustomEvent(actionableNotificationShownName, { detail: data })\n  );\n}\n\n/** @category UI */\nexport function subscribeNotificationShown(\n  cb: (data: ShowNotificationEvent) => void\n) {\n  const handler = (ev: CustomEvent) => cb(ev.detail);\n  window.addEventListener(notificationShownName, handler);\n  return () => window.removeEventListener(notificationShownName, handler);\n}\n\n/** @category UI */\nexport function subscribeActionableNotificationShown(\n  cb: (data: ShowActionableNotificationEvent) => void\n) {\n  const handler = (ev: CustomEvent) => cb(ev.detail);\n  window.addEventListener(actionableNotificationShownName, handler);\n  return () =>\n    window.removeEventListener(actionableNotificationShownName, handler);\n}\n\n/** @category UI */\nexport function subscribeToastShown(cb: (data: ShowToastEvent) => void) {\n  const handler = (ev: CustomEvent) => cb(ev.detail);\n  window.addEventListener(toastShownName, handler);\n  return () => window.removeEventListener(toastShownName, handler);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","connectivityChangedEventName","dispatchConnectivityChanged","online","window","dispatchEvent","CustomEvent","detail","subscribeConnectivityChanged","cb","handler","ev","addEventListener","removeEventListener","subscribeConnectivity","navigator","onLine","precacheStaticDependenciesEventName","dispatchPrecacheStaticDependencies","data","subscribePrecacheStaticDependencies","notificationShownName","actionableNotificationShownName","toastShownName","dispatchNotificationShown","dispatchActionableNotificationShown","subscribeNotificationShown","subscribeActionableNotificationShown","subscribeToastShown"],"sourceRoot":""}