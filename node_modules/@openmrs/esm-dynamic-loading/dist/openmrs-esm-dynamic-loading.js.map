{"version":3,"file":"openmrs-esm-dynamic-loading.js","mappings":"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","sources":["webpack://@openmrs/esm-dynamic-loading/webpack/bootstrap","webpack://@openmrs/esm-dynamic-loading/webpack/runtime/define property getters","webpack://@openmrs/esm-dynamic-loading/webpack/runtime/hasOwnProperty shorthand","webpack://@openmrs/esm-dynamic-loading/webpack/runtime/make namespace object","webpack://@openmrs/esm-dynamic-loading/webpack/runtime/sharing","webpack://@openmrs/esm-dynamic-loading/./src/dynamic-loading.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.S = {};\nvar initPromises = {};\nvar initTokens = {};\n__webpack_require__.I = (name, initScope) => {\n\tif(!initScope) initScope = [];\n\t// handling circular init calls\n\tvar initToken = initTokens[name];\n\tif(!initToken) initToken = initTokens[name] = {};\n\tif(initScope.indexOf(initToken) >= 0) return;\n\tinitScope.push(initToken);\n\t// only runs once\n\tif(initPromises[name]) return initPromises[name];\n\t// creates a new share scope if needed\n\tif(!__webpack_require__.o(__webpack_require__.S, name)) __webpack_require__.S[name] = {};\n\t// runs all init snippets from all modules reachable\n\tvar scope = __webpack_require__.S[name];\n\tvar warn = (msg) => {\n\t\tif (typeof console !== \"undefined\" && console.warn) console.warn(msg);\n\t};\n\tvar uniqueName = \"@openmrs/esm-dynamic-loading\";\n\tvar register = (name, version, factory, eager) => {\n\t\tvar versions = scope[name] = scope[name] || {};\n\t\tvar activeVersion = versions[version];\n\t\tif(!activeVersion || (!activeVersion.loaded && (!eager != !activeVersion.eager ? eager : uniqueName > activeVersion.from))) versions[version] = { get: factory, from: uniqueName, eager: !!eager };\n\t};\n\tvar initExternal = (id) => {\n\t\tvar handleError = (err) => (warn(\"Initialization of sharing external failed: \" + err));\n\t\ttry {\n\t\t\tvar module = __webpack_require__(id);\n\t\t\tif(!module) return;\n\t\t\tvar initFn = (module) => (module && module.init && module.init(__webpack_require__.S[name], initScope))\n\t\t\tif(module.then) return promises.push(module.then(initFn, handleError));\n\t\t\tvar initResult = initFn(module);\n\t\t\tif(initResult && initResult.then) return promises.push(initResult['catch'](handleError));\n\t\t} catch(err) { handleError(err); }\n\t}\n\tvar promises = [];\n\tswitch(name) {\n\t}\n\tif(!promises.length) return initPromises[name] = 1;\n\treturn initPromises[name] = Promise.all(promises).then(() => (initPromises[name] = 1));\n};","/** @module @category Dynamic Loading */\n\"use strict\";\n// hack to make the types defined in esm-globals available here\nimport type { ImportMap } from \"@openmrs/esm-globals\";\n\n/**\n * @internal\n *\n * Transforms an ESM module name to a valid JS identifier\n *\n * @param name the name of a module\n * @returns An opaque, equivalent JS identifier for the module\n */\nexport function slugify(name: string) {\n  return name.replace(/[\\/\\-@]/g, \"_\");\n}\n\n/**\n * Loads the named export from a named package. This might be used like:\n *\n * ```js\n * const { someComponent } = importDynamic(\"@openmrs/esm-template-app\")\n * ```\n *\n * @param jsPackage The package to load the export from\n * @param share Indicates the name of the shared module; this is an advanced feature if the package you are loading\n *   doesn't use the default OpenMRS shared module name \"./start\"\n */\nexport async function importDynamic<T = any>(\n  jsPackage: string,\n  share: string = \"./start\",\n  options?: { importMap?: ImportMap }\n): Promise<T> {\n  await preloadImport(jsPackage, options?.importMap);\n\n  const jsPackageSlug = slugify(jsPackage);\n\n  const container = window[jsPackageSlug] as unknown;\n  if (!isFederatedModule(container)) {\n    const error = `The global variable ${jsPackageSlug} does not refer to a federated module`;\n    console.error(error);\n    throw new Error(error);\n  }\n\n  container.init(__webpack_share_scopes__.default);\n\n  const factory = await container.get(share);\n  const module = factory();\n\n  if (!(typeof module === \"object\") || module === null) {\n    const error = `Container for ${jsPackage} did not return an ESM module as expected`;\n    console.error(error);\n    throw new Error(error);\n  }\n\n  return module as unknown as T;\n}\n\n/**\n * @internal\n *\n * This internal method is used to ensure that the script belonging\n * to the given package is loaded and added to the head.\n *\n * @param jsPackage The package to load\n * @param importMap The import map to use for loading this package.\n *  The main reason for specifying this is to avoid needing to call\n *  `getCurrentPageMap()` for every script when bulk loading.\n */\nexport async function preloadImport(jsPackage: string, importMap?: ImportMap) {\n  if (typeof jsPackage !== \"string\" || jsPackage.trim().length === 0) {\n    const error =\n      \"Attempted to call importDynamic() without supplying a package to load\";\n    console.error(error);\n    throw new Error(error);\n  }\n\n  const jsPackageSlug = slugify(jsPackage);\n\n  if (!window[jsPackageSlug]) {\n    const activeImportMap = importMap ?? (await getCurrentImportMap());\n    if (!activeImportMap.imports.hasOwnProperty(jsPackage)) {\n      const error = `Could not find the package ${jsPackage} defined in the current importmap`;\n      console.error(error);\n      throw new Error(error);\n    }\n\n    let url = activeImportMap.imports[jsPackage];\n    if (url.startsWith(\"./\")) {\n      url = window.spaBase + url.substring(1);\n    }\n\n    await new Promise((resolve, reject) => {\n      loadScript(url, resolve, reject);\n    });\n  }\n}\n\n/**\n * @internal\n *\n * Used to load the current import map\n *\n * @returns The current page map\n */\nexport async function getCurrentImportMap() {\n  return window.importMapOverrides.getCurrentPageMap();\n}\n\ninterface FederatedModule {\n  init: (scope: typeof __webpack_share_scopes__.default) => void;\n  get: (_export: string) => Promise<() => unknown>;\n}\n\nfunction isFederatedModule(a: unknown): a is FederatedModule {\n  return (\n    typeof a === \"object\" &&\n    a !== null &&\n    \"init\" in a &&\n    typeof a[\"init\"] === \"function\" &&\n    \"get\" in a &&\n    typeof a[\"get\"] === \"function\"\n  );\n}\n\n// internals to track script loading\n// basically, if we're already loading a script, we should wait until the script is loaded\n// we use a global to track this\nconst OPENMRS_SCRIPT_LOADING = Symbol(\"__openmrs_script_loading\");\n\n/**\n * Appends a `<script>` to the DOM with the given URL.\n */\nfunction loadScript(\n  url: string,\n  resolve: (value: unknown) => void,\n  reject: (reason?: any) => void\n) {\n  const scriptElement = document.head.querySelector(`script[src=\"${url}\"]`);\n  let scriptLoading: Set<String> = window[OPENMRS_SCRIPT_LOADING];\n  if (!scriptLoading) {\n    scriptLoading = window[OPENMRS_SCRIPT_LOADING] = new Set([]);\n  }\n\n  if (!scriptElement) {\n    scriptLoading.add(url);\n    const element = document.createElement(\"script\");\n    element.src = url;\n    element.type = \"text/javascript\";\n    element.async = true;\n    const loadFn = () => {\n      scriptLoading.delete(url);\n      element.removeEventListener(\"load\", loadFn);\n      resolve(null);\n    };\n    element.addEventListener(\"load\", loadFn);\n\n    const errFn = (ev: ErrorEvent) => {\n      scriptLoading.delete(url);\n      console.error(`Failed to load script from ${url}`, ev);\n      element.removeEventListener(\"error\", errFn);\n      reject(ev.message);\n    };\n    element.addEventListener(\"error\", errFn);\n\n    document.head.appendChild(element);\n  } else {\n    if (scriptLoading.has(url)) {\n      const loadFn = () => {\n        scriptElement?.removeEventListener(\"load\", loadFn);\n        resolve(null);\n      };\n      scriptElement.addEventListener(\"load\", loadFn);\n\n      const errFn = (ev: ErrorEvent) => {\n        console.error(`Failed to load script from ${url}`, ev);\n        scriptElement?.removeEventListener(\"error\", errFn);\n        reject(ev.message);\n      };\n      scriptElement.addEventListener(\"error\", errFn);\n    } else {\n      console.warn(\"Script already loaded. Not loading it again.\", url);\n      resolve(null);\n    }\n  }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","S","initPromises","initTokens","I","name","initScope","initToken","indexOf","push","promises","length","Promise","all","then","slugify","replace","importDynamic","jsPackage","share","options","jsPackageSlug","container","error","factory","module","preloadImport","importMap","a","window","console","Error","init","__webpack_share_scopes__","default","activeImportMap","url","trim","getCurrentImportMap","imports","startsWith","spaBase","substring","resolve","reject","scriptElement","document","head","querySelector","scriptLoading","OPENMRS_SCRIPT_LOADING","Set","has","loadFn","removeEventListener","addEventListener","errFn","ev","message","warn","add","element","createElement","src","type","async","delete","appendChild","loadScript","importMapOverrides","getCurrentPageMap"],"sourceRoot":""}